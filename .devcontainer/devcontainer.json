{
	"name": "GitHub Codespaces (Default)",

	"image": "mcr.microsoft.com/vscode/devcontainers/universal:2-linux",

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": { 
				"go.toolsManagement.checkForUpdates": "local",
				"go.useLanguageServer": true,
				"go.gopath": "/go",
				"python.defaultInterpreterPath": "/opt/python/latest/bin/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
				"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
				"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
				"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
				"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
				"lldb.executable": "/usr/bin/lldb",
				"files.watcherExclude": {
					"**/target/**": true
				}
			},
			
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"GitHub.vscode-pull-request-github",
				"rebornix.Ruby",
				"MS-vsliveshare.vsliveshare"
			]
		}
	},

	"remoteUser": "codespace",

	"overrideCommand": false,

	"mounts": ["source=codespaces-linux-var-lib-docker,target=/var/lib/docker,type=volume"],

	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"--privileged",
		"--init"
	],
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	
	// "onCreateCommand": ". /etc/profile.d/rvm.sh && cd /workspaces/hr-eng-internship-2023-sample/rails && rvm install 3.0.6 && bundle install"
	"onCreateCommand": "bash -c 'rvm install 3.0.6' && bash -i -c 'cd /workspaces/hr-eng-internship-2023-sample/rails && bundle install'",

	// "oryx build" will automatically install your dependencies and attempt to build your project
	"postCreateCommand": "oryx build -p virtualenv_name=.venv --log-file /tmp/oryx-build.log --manifest-dir /tmp || echo 'Could not auto-build. Skipping.'"

}